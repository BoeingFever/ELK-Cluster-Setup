input { 
  pipeline { 
      address => test1 
  } 
}
# input { 
#   redis {
#     host => "redis01" # host name of your redis instance or cluster ?
#     key => "test_key" # the key you used in filebeat that pushing files to redis
#     data_type => "list"
#     id => "redis01"
#   }
# }

filter {

  if [logformat] == "plaintext" {
  grok {
    match => { "message" => "%{COMMONAPACHELOG}"}
    #match => { "message" => "%{DATA:timestamp} %{WORD:level} %{DATA:class} \[%{DATA:thread}\] *%{GREEDYDATA:message}"}
    #overwrite => ["message"]
  }

  date {
    locale => "en"
    match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
    target => "@timestamp"
    #timezone => "Asia/Hong_Kong"
    #remove_field => ["timestamp"]
  }
}
  if [logformat] == "json" {
    date {
      locale => "en"
      match => [ "timestamp", "ISO8601" ]
      target => "timestamp"
      timezone => "Asia/Hong_Kong"
      remove_field => ["instant"]
      #remove_field => ["timestamp"]
    }
    json {
      source => "message"
      skip_on_invalid_json => "true"
      remove_field => "message"
    }
  }
}

output {
  elasticsearch { 
    # please adjust the Elasticsearch ip and port below with your Elasticsearch hosts and ports
    hosts => ["http://10.222.60.182:9200","http://10.222.60.183:9200","http://10.222.60.148:9200"] 
    #index => "%{[appName]}-%{+yyyy.MM.dd}"
    #index => "%{[@metadata][beat]}-%{[node.name]}-%{+yyyy.MM.dd}-000001"
    index => "pipeline1-%{+yyyy.MM.dd}-000001"
    ilm_rollover_alias => "pipeline1"
    ilm_policy => "rollover_policy"
    ssl => false #this is to let logstash use https protocol while not verifying cert
    ssl_certificate_verification => false
  }
  stdout { codec => rubydebug }
}